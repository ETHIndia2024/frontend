// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model EnterpriseOrg {
  id            String        @id @default(cuid())
  name          String
  walletAddress String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  labellingJobs LabellingJob[]
}

model LabellingJob {
  id               String     @id @default(cuid())
  title            String
  description      String?
  reward           Float
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  creator          EnterpriseOrg @relation(fields: [creatorId], references: [id])
  creatorId        String
  labelledByCount  Int        @default(0)
  images           Image[]
  labellings       Labelling[]
}

model Image {
  id             String       @id @default(cuid())
  url            String
  labellingJob   LabellingJob @relation(fields: [labellingJobId], references: [id])
  labellingJobId String
  createdAt      DateTime     @default(now())
  labellings     Labelling[]
}

model User {
  id                 String     @id @default(cuid())
  walletAddress      String     @unique
  tasksCompleted     Int        @default(0)
  claimableRewards   Float      @default(0)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  labellings         Labelling[]
}

model Labelling {
  id             String       @id @default(cuid())
  labellingJob   LabellingJob @relation(fields: [labellingJobId], references: [id])
  labellingJobId String
  image          Image        @relation(fields: [imageId], references: [id])
  imageId        String
  user           User         @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime     @default(now())

  @@unique([labellingJobId, imageId, userId])
}

